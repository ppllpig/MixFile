--- a/app/src/main/java/com/donut/mixfile/ui/routes/webdav/WebDav.kt
+++ b/app/src/main/java/com/donut/mixfile/ui/routes/webdav/WebDav.kt
@@ -37,9 +37,12 @@
  ) {
      var text by remember {
          mutableStateOf("")
      }
+     var url by remember {
+         mutableStateOf("")
+     }
      val webDavAddress = "$serverAddress/api/webdav"
      Text(
          text = "WebDAV局域网连接地址: $webDavAddress",
@@ -92,6 +95,30 @@
                  .padding(10.dp, 0.dp)
          ) {
              Text(text = "粘贴内容")
+             OutlinedTextField(
+                 value = url,
+                 onValueChange = {
+                     url = it
+                 },
+                 modifier = Modifier.fillMaxWidth(), label = {
+                     Text(text = "请输入文件链接")
+                 },
+                 maxLines = 3,
+                 trailingIcon = {
+                     if (url.isNotEmpty()) {
+                         Icon(
+                             Icons.Outlined.Close,
+                             tint = colorScheme.primary,
+                             contentDescription = "clear",
+         
+                             modifier = Modifier.clickable(
+                                 indication = null,
+                                 interactionSource = remember { MutableInteractionSource() }) {
+                                 url = ""
+                             })
+                     }
+                 }
+             )
+             Button(
+                 onClick = {
+                     downloadToWebDav(url)
+                 },
+                 modifier = Modifier.fillMaxWidth(),
+             ) {
+                 Text(text = "从链接下载")
+             }
          }
          Button(
              onClick = {

--- a/app/src/main/java/com/donut/mixfile/ui/routes/webdav/Dialogs.kt
+++ b/app/src/main/java/com/donut/mixfile/ui/routes/webdav/Dialogs.kt
@@ -236,3 +236,25 @@
         show()
     }
 }
+
+fun downloadToWebDav(url: String) {
+    val progress = ProgressContent()
+    MixDialogBuilder("下载并导入中").apply {
+        setContent {
+            AsyncEffect {
+                errorDialog("下载失败", onError = { closeDialog() }) {
+                    val data = loadDataWithMaxSize(url, progress)
+                    val dav = mixFileServer.webDav
+                    val fileName = url.substringAfterLast("/")
+                    dav.WEBDAV_DATA.addFile(fileName, data)
+                    dav.saveData()
+                    showToast("下载并导入成功!")
+                }
+                withContext(Dispatchers.Main) {
+                    closeDialog()
+                }
+            }
+            progress.LoadingContent()
+        }
+        setDefaultNegative()
+        show()
+    }
+}
